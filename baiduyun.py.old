#! -*- coding:utf-8 -*-

'''
操作百度网盘，自动添加资源到网盘。
注意点：
爬取源码可以使用urllib2模块，不需要使用phantomjs，因为不需要执行js。
* 获取cookie（可以手动登录然后抓包获取）
* 首先爬取如：http://pan.baidu.com/s/1o8LkaPc页面，获取源码
* 解析源码，筛选出该页面分享资源的名称、shareid、from（uk)、bdstoken、appid（app_id）。
* 构造post包（用来添加资源到网盘），该包需要用到以上4个参数，当然还有一个最重要的就是cookie
在post包的url中还有一个logid参数，内容可以随便写，应该是个随机值然后做了base64加密。
在post包的payload中，filelist是资源名称，格式filelist=["/name.mp4"]，path为保存到那个目录下，格式path=/pathname
'''
__author__="nMask"
__Blog__="http://thief.one"
__Date__="20170412"

import re
import traceback
import urllib2
import urllib
import requests
import json
import argparse

shareurl="https://pan.baidu.com/s/10W3hxtIdaPrxrx1QBHqqsQ?fid=73587813535044"
filename="/data/scrapy_data/baiduyun/level3.txt"
COOKIE = os.environ.get('BAIDU_COOKIE', None)

path="/scrapy_data"
res_content=r'"app_id":"(\d*)".*"path":"([^"]*)".*"uk":(\d*).*"bdstoken":"(\w*)".*"shareid":(\d*)'  #正则，获取参数值
'''
cookie可以通过登录账号访问百度分享地址后，手动添加资源时用fiddler抓包获取,格式如下：
BAIDUID=C1015A10A3FC569A66923EEF:FG=1; 
BIDUPSID=C1015A10A3FC569A6612AA6EF; 
PSTM=149154382; 
PANWEB=1; 
bdshare_firstime=1497460316; 
BDCLND=vm6Tu2BF8x8%2BwNBLh3XUQD5sfKCUx; 
PSINO=5; 
H_PS_PSSID=22583_22161_1463_2110_17001_21673_22158; 
BDUSS=hqR2RSOVROVmNHREwtV29xVkhBQ3pUb3ZLZlkxM3JGcVFqdmMtY3kzaDlaQUFBJCQAAAAAAAAAAAEAAAA~cQc40NLUy7XEwbm359PwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADJR-FgyUfhYM2; 
STOKEN=69734c07f605e8d0bb09e5513d24497702a32e11029617f54fa3baaa2d9; 
SCRC=0c9e10560d1f5de23b2cf8c42c7484ef; 
Hm_lvt_7a3960b6f0eb0085b7f96ff5e660b0=1492047460,1492396138,1492396201,1492667545; 
Hm_lpvt_7a3960b6f06b0085b7f96ff5e660b0=1492668725; 
PANPSC=1004971751379968%3AWaz2A%2F7j1vWLfEj2viX%2BHu0oj%2BY%2FIsAxoXP3kWK6VuJ5936qezF2bVph1S8bONssvn6mlYdRuXIXUCPSJ19ROAD5r1J1nbMCUL3KDnLECfYjzPb5hCCEJfIbGeUDFmg5zwpdg9WqRKWDBCT3FjnL6jsjP%2FyZiBX26YfN4HZ4D76jyG3uDkPYshZ7OchQK1KQDQpg%2B6XCV%2BSJWX9%2F9F%2FIkt7vMgzc%2BT'
'''
def http_request(url, msg="", method="GET", is_logging=False, **kwargs):
    u""" 执行需要的 HTTP 请求命令

    功能:
        整合了所有 HTTP 参数请求

    :param str url: 链接
    :param str msg: 信息
    :param str method: 请求方式
    :param bool is_logging: 是否打印详细信息

    get - params=data
    post - data=data headers=headers

    # GET params 不支持循环嵌套的数据. 例如{'properties': {'data_mark': '20191119064014'}} 需要自行json
        data = {
            # TIPS: 嵌套的字典, 里面必须 json 化
            "properties": json.dumps(properties),
        }

    """
    method_lis = ['GET', 'POST', 'HEAD', 'OPTIONS', 'PUT', 'DELETE', 'TRACE', 'CONNECT']
    method = method if method.upper() in method_lis else method_lis[0]
    try:
        r = getattr(requests, method.lower(), None)(url, **kwargs)
        if is_logging:
            logging.info('>> %s \n[%s][URL]: %s' % (msg, method, urlparse.unquote(r.url)))
        ret = r.json()

        # 查询失败的提示信息处理
        if ret and isinstance(ret, dict) and bool(set(['exceptions','exception']) & set(ret.keys())):
            logging.error(ret.get('message') or ret.get('cause'))
            logging.error(u"查询[Msg: %s]-[Method: %s]-[URL: %s]失败!,\n失败信息[%s]" %
                          (msg, method, urlparse.unquote(r.url), ret))

    except requests.exceptions.ConnectionError as err:
        logging.error(traceback.format_exc())
        ret = {'exception':u'图库[URL: %s]连接失败'%url, 'message':u'图库服务连接失败!'}
        raise ValueError(ret['message'])
    except Exception as e:
        logging.error(traceback.format_exc())
        ret = {'exception':u'图库[URL: %s]查询失败'%url, 'message':u'图库服务查询失败!'}
        raise ValueError(ret['message'])
    return ret


class bdpanSpider:
    def __init__(self):
        self.p=re.compile(res_content)
        self.app_id=""
        self.uk=""
        self.bdstoken=""
        self.shareid=""
        self.path=""
        self.headers = {
            'Host':"pan.baidu.com",
            'Accept':'*/*',
            'Accept-Language':'en-US,en;q=0.8',
            'Content-Type' : 'application/x-www-form-urlencoded; charset=UTF-8',
            'Cache-Control':'max-age=0',
            # 'Referer':'https://pan.baidu.com/s/1kUOxT0V?errno=0&errmsg=Auth%20Login%20Sucess&&bduss=&ssnerror=0&',
            'Referer':'https://pan.baidu.com/s/10W3hxtIdaPrxrx1QBHqqsQ?fid=73587813535044&errno=0&errmsg=Auth%20Login%20Sucess&&bduss=&ssnerror=0&traceid=',
            'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
            'Cookie':Cookie
        }



        # Post https://pan.baidu.com/api/report/user?channel=chunlei&web=1&app_id=250528&bdstoken=2d230d4dd8b0029dbe1633cf2372ac61&logid=MTU4NDA5NzUzMzc0NDAuMzU4ODE5OTE3NzAwNTg2Mg==&clienttype=0
        # self.headers = {
        #     'Host': 'pan.baidu.com',
        #     'Connection': 'keep-alive',
        #     'Content-Length': '42',
        #     'Accept': '*/*',
        #     'Sec-Fetch-Dest': 'empty',
        #     'X-Requested-With': 'XMLHttpRequest',
        #     'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
        #     'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
        #     'Origin': 'https://pan.baidu.com',
        #     'Sec-Fetch-Site': 'same-origin',
        #     'Sec-Fetch-Mode': 'cors',
        #     'Referer': 'https://pan.baidu.com/s/10W3hxtIdaPrxrx1QBHqqsQ',
        #     'Accept-Encoding': 'gzip, deflate, br',
        #     'Accept-Language': 'zh-CN,zh;q=0.9,en;q=0.8',
        #     'Cookie':Cookie,
        # }
    def run(self,url):
        self.getbody(url)  ##获取源码并分析
        self.addziyuan()   ##添加资源到网盘

    def getbody(self,url):
        '''
        获取分享页面源码
        '''
        try:
            req=urllib2.Request(url,headers=self.headers)
            f=urllib2.urlopen(req)
            content=f.read()
        except Exception,e:
            print traceback.format_exc()
            print "[Error]",str(e)
        else:
            '''
            从源码中提取资源的一些参数
            '''
            L=self.p.findall(content)
            if len(L)>0:
                self.app_id=L[0][0]
                self.path=L[0][1]
                self.uk=L[0][2]
                self.bdstoken=L[0][3]
                self.shareid=L[0][4]
            print self.app_id, self.uk, self.bdstoken, self.shareid


    def addziyuan(self):
        '''
        添加该资源到自己的网盘
        '''
        headers = {
        # POST /share/transfer?shareid=4096538086&from=1110747557&ondup=newcopy&async=1&channel=chunlei&web=1&app_id=250528&bdstoken=2d230d4dd8b0029dbe1633cf2372ac61&logid=MTU4NDA5ODkxODE5ODAuNjgwNzIzNjI3MDk2MzQ3NQ==&clienttype=0 HTTP/1.1
            'Host': 'pan.baidu.com',
            'Connection': 'keep-alive',
            'Content-Length': '51',
            'Accept': 'application/json, text/javascript, */*; q=0.01',
            #'Sec-Fetch-Dest': 'empty',
            #'X-Requested-With': 'XMLHttpRequest',
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
            'Origin': 'https://pan.baidu.com',
            #'Sec-Fetch-Site': 'same-origin',
            #'Sec-Fetch-Mode': 'cors',
            'Referer': 'https://pan.baidu.com/s/10W3hxtIdaPrxrx1QBHqqsQ',
            'Accept-Encoding': 'gzip, deflate, br',
            'Accept-Language': 'zh-CN,zh;q=0.9,en;q=0.8',
            'Cookie': Cookie,
        }


        url_post="https://pan.baidu.com/share/transfer?shareid="+self.shareid+"&from="+self.uk+"&bdstoken="+self.bdstoken+"&channel=chunlei&clienttype=0&web=1&app_id="+self.app_id+"&logid=MTQ5MjA0ODExOTE0NTAuNjg1ODk3MTk4ODIyNDE2Mw=="
        payload="filelist=%5B%22"+self.path+"%22%5D&path=/" #资源名称与要保存的路径


        # POST /api/report/user?channel=chunlei&web=1&app_id=250528&bdstoken=2d230d4dd8b0029dbe1633cf2372ac61&logid=MTU4NDA5NzUzMzc0NDAuMzU4ODE5OTE3NzAwNTg2Mg==&clienttype=0 HTTP/1.1

       # https://pan.baidu.com/share/transfer?shareid=4096538086&from=1110747557&ondup=newcopy&async=1&channel=chunlei&web=1&app_id=250528&bdstoken=2d230d4dd8b0029dbe1633cf2372ac61&logid=MTU4NDA5NzUzNzc5ODAuMDIzODg1MzAyMzg4NzYwODU0&clienttype=0

        post_data = {
            'from': self.uk,
            'app_id': self.app_id,
            'bdstoken': self.bdstoken,
            'shareid': self.shareid,
            'logid':'MTU4NDA5NzUzNzc5ODAuMDIzODg1MzAyMzg4NzYwODU0',
            'ondup':'newcopy',
            'async':'1',
            'channel':'chunlei',
            'web':'1',
            'clienttype':'0',
        }
        url_post = "https://pan.baidu.com/share/transfer?shareid={shareid}&from={from}&ondup=newcopy&async=1&channel=chunlei&web=1&app_id={app_id}&bdstoken={bdstoken}&logid={logid}&clienttype=0".format(**post_data)
        #payload="filelist=%5B%22"+self.path+"%22%5D&path=/" #资源名称与要保存的路径
        payload="filelist=%5B%22"+self.path+"%22%5D&path=/" #资源名称与要保存的路径
        payload="fsidlist=%5B1050206798214220%5D&path=%2Fscrapy_data"
        payload = {
            'fsidlist':"[1050206798214220]",
            'path':'/scrapy_data',
        }

        url_post="https://pan.baidu.com/share/transfer?shareid="+self.shareid+"&from="+self.uk+"&bdstoken="+self.bdstoken+"&channel=chunlei&clienttype=0&web=1&app_id="+self.app_id+"&logid=MTQ5MjA0ODExOTE0NTAuNjg1ODk3MTk4ODIyNDE2Mw=="
        payload="filelist=%5B%22"+self.path+"%22%5D&path=/" #资源名称与要保存的路径


        
        print "[Info]Url_Post:",url_post
        print "[Info]payload:",payload
        try:
            #req=urllib2.Request(url=url_post,data=payload,headers=headers)
            req = http_request(url_post,data=payload,headers=headers)
            print req
            f=urllib2.urlopen(req)
            result=json.loads(f.read())
            tag=result["errno"]
            print result
            print tag
            if tag==0:
                print "[Result]Add Success"
            elif tag==12:
                print "[Result]Already Exist"
            else:
                print "[Result]Have Error"
        except Exception,e:
            print "[Error]",str(e)
            print traceback.format_exc()


def main():
    global Cookie,path,shareurl,filename
    parser = argparse.ArgumentParser()
    parser.add_argument('-filename',help="name of the file to process")
    parser.add_argument("-shareurl",help="add your shareurl")
    parser.add_argument("-path",help="add your baidupan-path")
    parser.add_argument("-cookie",help="add your baidupan-cookie")

    args=parser.parse_args()

    if args.cookie:
        Cookie=Cookie or args.cookie
    else:
        print parser.print_help()
        exit(0)
    if args.path:
        path=urllib.quote(args.path)
    if args.shareurl:
        shareurl=args.shareurl
    elif args.filename:
        filename=args.filename
    else:
        print parser.print_help()
        exit(0)


if __name__=="__main__":
    
    main()
    cur=bdpanSpider()

    if filename!="":
        try:
            with open(filename,"r") as w:
                f=[i.strip("\n").strip("\r") for i in w.readlines()]
            for i in f:
                print "[Info]Shareurl:",i
                cur.run(i)
                print "****************************"
        except IOError:
            print "[Error]selectfilename error"
    else:
        cur.run(shareurl)

